/**
 * Given an array of positive numbers, find the maximum sum of a subsequence 
 * with the constraint that no 2 numbers in the sequence should be adjacent in the array.
 *  So 3 2 7 10 should return 13 (sum of 3 and 10) or 3 2 5 10 7 should return 15 (sum of 3, 5 and 7).
 * Answer the question in most efficient way.
 * Input : arr[] = {5, 5, 10, 100, 10, 5}
Output : 110
Input : arr[] = {1, 2, 3}
Output : 4
 */

function maxSumOfNumbers(var values, var j) {
        var initVal = values[0];
        var curVal = 0;
        var tempVal;
        var k;

        for (k = 1; k < j; k++)
        {
            if(initVal > curVal)
                tempVal = initVal;
            else
                tempVal = curVal;

            initVal = curVal + arr[k];
            curVal = tempVal;
        }

        if(initVal > curVal)
            return initVal;
        else
            return curVal;
}